{"remainingRequest":"/home/jonaty/Projetos-vue/projeto-final/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/jonaty/Projetos-vue/projeto-final/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jonaty/Projetos-vue/projeto-final/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jonaty/Projetos-vue/projeto-final/src/components/filtroLista.vue?vue&type=template&id=230febfb&","dependencies":[{"path":"/home/jonaty/Projetos-vue/projeto-final/src/components/filtroLista.vue","mtime":1562887110665},{"path":"/home/jonaty/Projetos-vue/projeto-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jonaty/Projetos-vue/projeto-final/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/jonaty/Projetos-vue/projeto-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jonaty/Projetos-vue/projeto-final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.livro.checked,\n          expression: \"livro.checked\"\n        }\n      ],\n      attrs: { type: \"checkbox\", name: \"list\" },\n      domProps: {\n        checked: Array.isArray(_vm.livro.checked)\n          ? _vm._i(_vm.livro.checked, null) > -1\n          : _vm.livro.checked\n      },\n      on: {\n        change: function($event) {\n          var $$a = _vm.livro.checked,\n            $$el = $event.target,\n            $$c = $$el.checked ? true : false\n          if (Array.isArray($$a)) {\n            var $$v = null,\n              $$i = _vm._i($$a, $$v)\n            if ($$el.checked) {\n              $$i < 0 && _vm.$set(_vm.livro, \"checked\", $$a.concat([$$v]))\n            } else {\n              $$i > -1 &&\n                _vm.$set(\n                  _vm.livro,\n                  \"checked\",\n                  $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                )\n            }\n          } else {\n            _vm.$set(_vm.livro, \"checked\", $$c)\n          }\n        }\n      }\n    }),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.allDone,\n          expression: \"allDone\"\n        }\n      ],\n      staticClass: \"toggle-all\",\n      attrs: { id: \"toggle-all\", type: \"checkbox\" },\n      domProps: {\n        checked: Array.isArray(_vm.allDone)\n          ? _vm._i(_vm.allDone, null) > -1\n          : _vm.allDone\n      },\n      on: {\n        change: function($event) {\n          var $$a = _vm.allDone,\n            $$el = $event.target,\n            $$c = $$el.checked ? true : false\n          if (Array.isArray($$a)) {\n            var $$v = null,\n              $$i = _vm._i($$a, $$v)\n            if ($$el.checked) {\n              $$i < 0 && (_vm.allDone = $$a.concat([$$v]))\n            } else {\n              $$i > -1 &&\n                (_vm.allDone = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n            }\n          } else {\n            _vm.allDone = $$c\n          }\n        }\n      }\n    }),\n    _c(\n      \"ul\",\n      { staticClass: \"todo-list\" },\n      _vm._l(_vm.filteredTodos, function(todo) {\n        return _c(\n          \"li\",\n          {\n            key: todo.id,\n            staticClass: \"todo\",\n            class: {\n              completed: todo.completed,\n              editing: todo == _vm.editedTodo\n            }\n          },\n          [\n            _c(\"div\", { staticClass: \"view\" }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: todo.completed,\n                    expression: \"todo.completed\"\n                  }\n                ],\n                staticClass: \"toggle\",\n                attrs: { type: \"checkbox\" },\n                domProps: {\n                  checked: Array.isArray(todo.completed)\n                    ? _vm._i(todo.completed, null) > -1\n                    : todo.completed\n                },\n                on: {\n                  change: function($event) {\n                    var $$a = todo.completed,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 &&\n                          _vm.$set(todo, \"completed\", $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          _vm.$set(\n                            todo,\n                            \"completed\",\n                            $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                          )\n                      }\n                    } else {\n                      _vm.$set(todo, \"completed\", $$c)\n                    }\n                  }\n                }\n              }),\n              _c(\n                \"label\",\n                {\n                  on: {\n                    dblclick: function($event) {\n                      return _vm.editTodo(todo)\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(todo.title))]\n              ),\n              _c(\"button\", {\n                staticClass: \"destroy\",\n                on: {\n                  click: function($event) {\n                    return _vm.removeTodo(todo)\n                  }\n                }\n              })\n            ])\n          ]\n        )\n      }),\n      0\n    ),\n    _c(\n      \"footer\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.todos.length,\n            expression: \"todos.length\"\n          }\n        ],\n        staticClass: \"footer\"\n      },\n      [\n        _c(\"span\", { staticClass: \"todo-count\" }, [\n          _c(\"strong\", [_vm._v(_vm._s(_vm.remaining))]),\n          _vm._v(\" \" + _vm._s(_vm._f(\"pluralize\")(_vm.remaining)) + \" left\\n  \")\n        ]),\n        _c(\"ul\", { staticClass: \"filters\" }, [\n          _c(\"li\", [\n            _c(\n              \"a\",\n              {\n                class: { selected: _vm.visibility == \"all\" },\n                attrs: { href: \"#/all\" }\n              },\n              [_vm._v(\"All\")]\n            )\n          ]),\n          _c(\"li\", [\n            _c(\n              \"a\",\n              {\n                class: { selected: _vm.visibility == \"active\" },\n                attrs: { href: \"#/active\" }\n              },\n              [_vm._v(\"Active\")]\n            )\n          ]),\n          _c(\"li\", [\n            _c(\n              \"a\",\n              {\n                class: { selected: _vm.visibility == \"completed\" },\n                attrs: { href: \"#/completed\" }\n              },\n              [_vm._v(\"Completed\")]\n            )\n          ])\n        ]),\n        _c(\n          \"button\",\n          {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.todos.length > _vm.remaining,\n                expression: \"todos.length > remaining\"\n              }\n            ],\n            staticClass: \"clear-completed\",\n            on: { click: _vm.removeCompleted }\n          },\n          [_vm._v(\"\\n    Clear completed\\n  \")]\n        )\n      ]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}